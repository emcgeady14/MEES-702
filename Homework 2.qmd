---
title: "Replication of Lyubchich et al. (2020): A data-driven approach to detecting change points in linear regression models"
author: Emi McGeady
date: today
format:
    pdf:
        fontfamily: times
        fontsize: 11pt
        fig-width: 8
        fig-height: 5
geometry:
    - left=1in
    - right=1in
    - top=1in
    - bottom=1in
knitr:
    opts_chunk:
        message: false
        warning: false
        comment: "#>"
        R.options:
            knitr.graphics.auto_pdf: true 
---

```{r}
#| echo: false
# Load Data:
d <- read.csv("./data/anoxia_jmt3_SL.csv")
d <- d[-nrow(d), ]

#Load Packages:
library(rpart)
library(rpart.plot)
library(funtimes)
library(knitr)
library(ggplot2)
library(patchwork)
```

```{r}
#| echo: false
# Data Processing:
#regression models:
m8 <- lm(EarlySummerAnoxicVol ~ JanAprTNLoad, data = d)

m9 <- lm(LateSummerAnoxicVol ~ JanMayTNLoad, data = d)

coeff8 <- summary(m8)$coefficients[,1]
coeff9 <- summary(m9)$coefficients[,1]
se8 <- summary(m8)$coefficients[, 2]
se9 <- summary(m9)$coefficients[, 2]

#make a table of the coefficients and standard errors:
df8 <- data.frame(Model = "m8", Variable = names(coeff8), Coefficient = coeff8, SE = se8)
df9 <- data.frame(Model = "m9", Variable = names(coeff9), Coefficient = coeff9, SE = se9)

# Combine the two data frames
merged_table <- rbind(df8, df9)

```
# Regression Models
```{r}
#| echo: false
#| tbl-cap: "Regression Model Estimates"
kable(merged_table)
```

$$
\hat{y}_{1t} = \underset{(0.405)}{-0.980} + \underset{(1.069 \cdot 10^{-6})}{6.903 \cdot 10^{-6}} \; JanAprTNLoad_{t},
\tag{8}
$$ {#eq-8}

$$
\hat{y}_{2t} = \underset{(0.426)}{-0.217} + \underset{(1.360\cdot10^{-6})}{5.596 \cdot 10^{-6} \; } \; JanMayTNLoad_{t},
\tag{9}
$$ {#eq-9}

where $\hat{y}_{1t}$ is Chesapeake Bay early summer anoxic volumes, and $\hat{y}_{2t}$ is late summer anoxic volumes, $JanAprTNLoad_{t}$ is total nitrogen load from Susquehanna and Potomac Rivers during January–April, $JanMayTNLoad_{t}$ is total nitrogen load from Susquehanna River during January–May, and standard errors of the coefficients are shown in parentheses.

```{r}
#| echo: false
#| fig-cap: "Regression models of anoxic volumes in Chesapeake Bay: (a) anoxic volumes in early summer, fitted with (8); (d) anoxic volumes in late summer, fitted with (9); (b, e) respective residuals; (c, f) sample autocorrelation functions (ACFs) of the residuals"
#| label: fig-three

#add fitted values to the data frame:
d$Fitted8 <- predict(m8)
d$Fitted9 <- predict(m9)
d$Residuals8 <-m8$residuals
d$Residuals9 <-m9$residuals

# Panel a: Early summer observed and fitted
p1 <- ggplot(d, aes(x = Year)) +
  geom_line(aes(y = EarlySummerAnoxicVol), color = "black") +
  annotate(
    "text", x = 1988, y = 0, label = "Observed", color = "black", size = 3
  ) +
  geom_point(aes(y = EarlySummerAnoxicVol), color = "black", pch = 1) +
  geom_line(aes(y = Fitted8), color = "skyblue") +
  annotate(
    "text", x = 1986, y = 2.2, label = "Fitted", color = "skyblue", size = 3
  ) +
  labs(title = "(a)", y = "Early summer anoxic volume (km³)", x = "Year") +
  theme_classic() 

# panel b: m8 residuals
p2 <- ggplot(d, aes(x = Year)) +
  geom_line(aes(y = Residuals8), color = "black") +
  geom_point(aes(y = Residuals8), color = "black", pch = 1) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
  labs(title = "(b)", y = "Residuals (km³)", x = "Year") +
  theme_classic()

# panel c: acf m8
acf_8 <- acf(m8$residuals,plot=F)
acf_8_data <- data.frame(Lag = acf_8$lag, ACF = acf_8$acf)

p3 <- ggplot(acf_8_data, aes(x = Lag, y = ACF)) +
  geom_segment(aes(xend = Lag, yend = 0)) +
  geom_hline(yintercept = c(-0.2, 0.2), linetype = "dashed", color = "blue") +
  geom_hline(yintercept = 0, color = "black") +
  labs(title = "(c)", x = "Lag (years)", y = "ACF of residuals") +
  theme_classic()

# panel d: late summer observed vs fitted
p4 <- ggplot(d, aes(x = Year)) +
  geom_line(aes(y = LateSummerAnoxicVol), color = "black") +
  annotate(
    "text", x = 1988, y = 3, label = "Observed", color = "black", size = 3
  ) +
  geom_point(aes(y = LateSummerAnoxicVol), color = "black", pch = 1) +
  geom_line(aes(y = Fitted9), color = "skyblue") +
  annotate(
    "text", x = 1988, y = 1.2, label = "Fitted", color = "skyblue", size = 3
  ) +
  labs(title = "(d)", y = "Late summer anoxic volume (km³)", x = "Year") +
  theme_classic() 

# panel e: m9 residuals
p5 <- ggplot(d, aes(x = Year)) +
  geom_line(aes(y = Residuals9), color = "black") +
  geom_point(aes(y = Residuals9), color = "black", pch = 1 ) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
  labs(title = "(e)", y = "Residuals (km³)", x = "Year") +
  theme_classic()

#panel f: acf m9
acf_9 <- acf(m9$residuals, plot=F)
acf_9_data <- data.frame(Lag = acf_9$lag, ACF = acf_9$acf)

p6 <- ggplot(acf_9_data, aes(x = Lag, y = ACF)) +
  geom_segment(aes(xend = Lag, yend = 0)) +
  geom_hline(yintercept = c(-0.2, 0.2), linetype = "dashed", color = "blue") +
  geom_hline(yintercept = 0, color = "black") +
  labs(title = "(f)", x = "Lag (years)", y = "ACF of residuals") +
  theme_classic()

(p1 | p2 | p3) / (p4 | p5 | p6)
```


```{r}
#| echo: false
#| fig-cap: "Classification and regression trees applied to residuals of (a) model (8) for anoxic volumes in early summer, and (b) model (9) for anoxic volumes in late summer. For each node, the average value of the residuals is reported along with the node size expressed as percentage of the total sample size T = 33"
#| label: fig-four

earlysumcart <- rpart(m8$residuals ~ Year,
                      data = d,
                      method = "anova",
                      control = rpart.control(minbucket = 4, maxdepth = 2))

latesummercart <- rpart(m9$residuals ~ Year,
                       data = d,
                       method = "anova",
                       control = rpart.control(minbucket = 4, maxdepth = 2))

rpart.plot(earlysumcart)
rpart.plot(latesummercart)

```

```{r}
#| echo: false
#| tbl-cap: "Bootstrapped p-values by CART Method"

res8 <- m8$residuals
k8<- c(4,29) #1988, 2013
B <- 10000

res9 <- m9$residuals
#extract index for years 2001, 2009
k9 <- c(17,25)

result8 <- mcusum_test(e = res8, k = k8, B = 10000)
result9 <- mcusum_test(e = res9, k = k9, B = 10000)

bootstrap_pval <- c(result8$p.value, result9$p.value)

#kable(bootstrap_pval)

df1 <- data.frame(Model = "8", P_value = bootstrap_pval[1])
df2 <- data.frame(Model = "9", P_value = bootstrap_pval[2])

# Combine the two data frames
pvaluetable <- rbind(df1, df2)

kable(pvaluetable)
#early summer (8) Cart, change points = 1988, 2013
#late summer (9) Cart, change points = 2001, 2009


```



